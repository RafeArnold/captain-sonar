version: '3.9'
services:
  app:
    build:
      context: .
      args:
        PORT: ${APP_SERVER_PORT}
        VERSION: ${APP_VERSION}
        WORKING_DIR: ${WORKING_DIR}
    environment:
      APPLICATION_PROPERTIES_PATH: ${APPLICATION_PROPERTIES_DST}
      server.port: ${APP_SERVER_PORT}
      front-end.dir: ${FRONT_END_DST}
    volumes:
      - type: bind
        source: ${APPLICATION_PROPERTIES_SRC}
        target: ${WORKING_DIR}/${APPLICATION_PROPERTIES_DST}
      - type: bind
        source: ${FRONT_END_SRC}
        target: ${WORKING_DIR}/${FRONT_END_DST}
    deploy:
      replicas: 3
    ports:
      - "${EXTERNAL_APP_SERVER_PORTS}:${APP_SERVER_PORT}"
    command: -cluster
#    depends_on:
#      - redis-db
#  redis-db:
#    image: redis:alpine
#    volumes:
#      - type: volume
#        source: redis-db-data
#        target: /data
#    command: redis-server --appendonly yes --requirepass ${REDIS_PASS}
#volumes:
#  redis-db-data:
